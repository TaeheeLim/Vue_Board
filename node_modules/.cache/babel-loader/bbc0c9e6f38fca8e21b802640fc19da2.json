{"remainingRequest":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/eslint-loader/index.js??ref--14-0!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/store/modules/noAccess/community.js","dependencies":[{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/store/modules/noAccess/community.js","mtime":1638879594781},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/babel.config.js","mtime":1638249462730},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js","mtime":1638249467481},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/eslint-loader/index.js","mtime":1638249471321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9tbnQvYy9Vc2Vycy9cdUM3ODRcdUQwRENcdUQ3NkMvRGVza3RvcC9cdUNENUNcdUM4ODVcdUQ1MDRcdUI4NUNcdUM4MURcdUQyQjgvdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvbW50L2MvVXNlcnMvXHVDNzg0XHVEMERDXHVENzZDL0Rlc2t0b3AvXHVDRDVDXHVDODg1XHVENTA0XHVCODVDXHVDODFEXHVEMkI4L3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwovL2ltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCcKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGNvbW11bml0eSA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBib2FyZExpc3Q6IFtdLAogICAgbnVtYmVyT2ZBcnRpY2xlOiAwLAogICAgYXJ0aWNsZXNPblZpZXc6IDAsCiAgICBjb250ZW50OiAnJwogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBwdXNoVG9Cb2FyZExpc3Q6IGZ1bmN0aW9uIHB1c2hUb0JvYXJkTGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBwYXlsb2FkWyLsl7TroLjri4giXSA9IGZhbHNlOwogICAgICBwYXlsb2FkWyLsiJjsoJXtlojri4giXSA9IGZhbHNlOwogICAgICBwYXlsb2FkLmlzTW9kaWZ5ID0gdHJ1ZTsKICAgICAgc3RhdGUuYm9hcmRMaXN0LnB1c2gocGF5bG9hZCk7CiAgICB9LAogICAgc2V0TnVtYmVyT2ZBcnRpY2xlOiBmdW5jdGlvbiBzZXROdW1iZXJPZkFydGljbGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubnVtYmVyT2ZBcnRpY2xlID0gcGF5bG9hZDsKICAgIH0sCiAgICBzZXRBcnRpY2xlc09uVmlldzogZnVuY3Rpb24gc2V0QXJ0aWNsZXNPblZpZXcoc3RhdGUpIHsKICAgICAgc3RhdGUuYXJ0aWNsZXNPblZpZXcgPSBzdGF0ZS5ib2FyZExpc3QubGVuZ3RoOwogICAgfSwKICAgIGFkZGluZ1RvQXJ0aWNsZXNPblZpZXc6IGZ1bmN0aW9uIGFkZGluZ1RvQXJ0aWNsZXNPblZpZXcoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuYXJ0aWNsZXNPblZpZXcgKz0gcGF5bG9hZDsKICAgIH0sCiAgICBwdXNoVG9Db21tZW50OiBmdW5jdGlvbiBwdXNoVG9Db21tZW50KHN0YXRlLCBpdGVtKSB7CiAgICAgIHZhciBfaXRlbSRfYm9hcmQk64yT6riAOwoKICAgICAgaWYgKGl0ZW0uX2JvYXJkLuuMk+q4gC5sZW5ndGggIT09IDAgfHwgaXRlbS5fYm9hcmQu64yT6riA7IiYID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAoX2l0ZW0kX2JvYXJkJOuMk+q4gCA9IGl0ZW0uX2JvYXJkLuuMk+q4gCkucHVzaC5hcHBseShfaXRlbSRfYm9hcmQk64yT6riALCBfdG9Db25zdW1hYmxlQXJyYXkoaXRlbS5fY29tbWVudCkpOwoKICAgICAgaXRlbS5fYm9hcmQuY29tbWVudHNPblZpZXcgPSBpdGVtLl9jb21tZW50Lmxlbmd0aDsKICAgIH0sCiAgICAvLy0tLS0tLS0tLS0tLS0tLeqyjOyLnOq4gCDqtIDroKggLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBjaGFuZ2VJc09wZW46IGZ1bmN0aW9uIGNoYW5nZUlzT3BlbihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBwYXlsb2FkLuyXtOuguOuLiCA9ICFwYXlsb2FkLuyXtOuguOuLiDsKICAgICAgc3RhdGU7CiAgICB9LAogICAgY2hhbmdlSXNVcGRhdGU6IGZ1bmN0aW9uIGNoYW5nZUlzVXBkYXRlKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHBheWxvYWQu7IiY7KCV7ZaI64uIID0gIXBheWxvYWQu7IiY7KCV7ZaI64uIOwogICAgICBzdGF0ZTsKICAgIH0sCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAvLyDtlbTri7kg6rKM7Iuc66y8IOuMk+q4gCDrpqzsiqTtirjsl5Ag64yT6riAIOy2lOqwgAogICAgYWRkaW5nVG9Db21tZW50TGlzdDogZnVuY3Rpb24gYWRkaW5nVG9Db21tZW50TGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgX3BheWxvYWQkYm9hcmQk64yT6riAOwoKICAgICAgc3RhdGU7CgogICAgICAoX3BheWxvYWQkYm9hcmQk64yT6riAID0gcGF5bG9hZC5ib2FyZC7rjJPquIApLnB1c2guYXBwbHkoX3BheWxvYWQkYm9hcmQk64yT6riALCBfdG9Db25zdW1hYmxlQXJyYXkocGF5bG9hZC5jb21tZW50TGlzdCkpOwogICAgfSwKICAgIC8vLS0tLS0tLS0tLS0tLS0tLeuMk+q4gCDqtIDroKghISEtLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBjaGFuZ2VDb21tZW50c0lzT3BlbjogZnVuY3Rpb24gY2hhbmdlQ29tbWVudHNJc09wZW4oc3RhdGUsIHBheWxvYWQpIHsKICAgICAgcGF5bG9hZC5pc09wZW4gPSAhcGF5bG9hZC5pc09wZW47CiAgICAgIHN0YXRlOwogICAgfSwKICAgIGNoYW5nZUNvbW1lbnRzSXNVcGRhdGU6IGZ1bmN0aW9uIGNoYW5nZUNvbW1lbnRzSXNVcGRhdGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgcGF5bG9hZC5pc1VwZGF0ZSA9ICFwYXlsb2FkLmlzVXBkYXRlOwogICAgICBzdGF0ZTsKICAgIH0sCiAgICBjaGFuZ2VJc0ZpbmlzaDogZnVuY3Rpb24gY2hhbmdlSXNGaW5pc2goc3RhdGUsIHBheWxvYWQpIHsKICAgICAgcGF5bG9hZC5pc0ZpbmlzaCA9ICFwYXlsb2FkLmlzRmluaXNoOwogICAgICBzdGF0ZTsKICAgIH0sCiAgICBjaGFuZ2VJc01vZGlmeTogZnVuY3Rpb24gY2hhbmdlSXNNb2RpZnkoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgcGF5bG9hZC5pc01vZGlmeSA9ICFwYXlsb2FkLmlzTW9kaWZ5OwogICAgICBzdGF0ZTsKICAgIH0sCiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGNoYW5nZUJvYXJkSXNNb2RpZnk6IGZ1bmN0aW9uIGNoYW5nZUJvYXJkSXNNb2RpZnkoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgcGF5bG9hZC5pc01vZGlmeSA9ICFwYXlsb2FkLmlzTW9kaWZ5OwogICAgICBzdGF0ZTsKICAgIH0sCiAgICBzZW5kaW5nTmV3Q29udGVudDogZnVuY3Rpb24gc2VuZGluZ05ld0NvbnRlbnQoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuY29udGVudCA9IHBheWxvYWQuY29udGVudDsKICAgICAgbmV3Q29udGVudDsKICAgICAgc3RhdGU7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICAvL2FydGljbGVPblZpZXcgc3RhdGXsl5AgPwogICAgZ2V0Qm9hcmRMaXN0OiBmdW5jdGlvbiBnZXRCb2FyZExpc3QoY29udGV4dCkgewogICAgICBheGlvcy5nZXQoJy9Cb2FyZExpc3QuanNvbicpLnRoZW4oZnVuY3Rpb24gKGUpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZS5kYXRhKSwKICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgaXRlbSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgncHVzaFRvQm9hcmRMaXN0JywgaXRlbSk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgIH0KCiAgICAgICAgY29udGV4dC5jb21taXQoJ3NldEFydGljbGVzT25WaWV3Jyk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldEJvYXJkTnVtOiBmdW5jdGlvbiBnZXRCb2FyZE51bShjb250ZXh0KSB7CiAgICAgIGF4aW9zLmdldCgnL2FydGljbGVOdW0uanNvbicpLnRoZW4oZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0TnVtYmVyT2ZBcnRpY2xlJywgZS5kYXRhLmFydGljbGVOdW0pOwogICAgICB9KTsKICAgIH0sCiAgICAvL+ybkOuemOuKlCDsnbQg67aA67aE7JeQ7IScIO2YhOyerOuztOyXrOyngOuKlCDqsozsi5zquIDsnZgg6rCc7IiY7J24IGFydGljbGVPblZpZXfrpbwg6rCZ7J20IOuEmOq5gAogICAgLy9Db250cm9sbGVy7JeQ7IScIOuztOyXrOyngOuKlCDqsJzsi5zquIDsnZgg6rCc7IiY66W8IOuwm+yVhOyEnCBqcGHrrLjrspXsnLzroZwg7Y6Y7J207KeV7LKY66as66W8IOychO2VqAogICAgLy9wYXJhbXMgOiB7YXJ0aWNsZU51bSA6IHRoaXMuYXJ0aWNsZU9uVmlld30KICAgIGdldE1vcmVMaXN0OiBmdW5jdGlvbiBnZXRNb3JlTGlzdChjb250ZXh0KSB7CiAgICAgIGF4aW9zLmdldCgnL0JvYXJkTGlzdC5qc29uJykudGhlbihmdW5jdGlvbiAoZSkgewogICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZS5kYXRhKSwKICAgICAgICAgICAgX3N0ZXAyOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGl0ZW0gPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdwdXNoVG9Cb2FyZExpc3QnLCBpdGVtKTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICB9CgogICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRBcnRpY2xlc09uVmlldycpOyAvLyBjb250ZXh0LmFydGljbGVzT25WaWV3ICs9IGUuZGF0YS5sZW5ndGgKICAgICAgfSk7CiAgICB9LAogICAgLy/su6jtirjroaTrn6zsl5DshJwgQ29tbWVudOywvuyVhOyEnCB7IHBhcmFtcyA6IHtpZHggOiBpdGVtLmlkeCwgbnVtYmVyIDogdGhpcy5jb21tZW50c09uVmlldyB9fQogICAgLy9jb21tZW50c09uVmlld+uKlCDsl6zquLDshJwgcGFyYW1z66GcIDDsnYQg64SY6rKo7KSMCiAgICAvL2NvbnRleHQuc3RhdGUuY29tbWVudHNPblZpZXcg7J2066CH6rKMIOunpOqwnOuzgOyImCAg64SY6rKo7KSMCiAgICBnZXRDb21tZW50czogZnVuY3Rpb24gZ2V0Q29tbWVudHMoY29udGV4dCwgaXRlbSkgewogICAgICBheGlvcy5nZXQoJy9Cb2FyZENvbW1lbnQuanNvbicpLnRoZW4oZnVuY3Rpb24gKGUpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgnY2hhbmdlSXNPcGVuJywgaXRlbSk7CgogICAgICAgIHZhciBfaXRlcmF0b3IzID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZS5kYXRhKSwKICAgICAgICAgICAgX3N0ZXAzOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIF9pdGVtID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgICBfaXRlbS5pc09wZW4gPSBmYWxzZTsKICAgICAgICAgICAgX2l0ZW0uaXNVcGRhdGUgPSBmYWxzZTsKICAgICAgICAgICAgX2l0ZW0uaXNGaW5pc2ggPSBmYWxzZTsKICAgICAgICAgICAgX2l0ZW0uaXNNb2RpZnkgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coZS5kYXRhKTsKICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgLy/tlbTri7kg6rKM7Iuc6riAIG9iamVjdAogICAgICAgICAgX2JvYXJkOiBpdGVtLAogICAgICAgICAgLy9leCkg64yT6riAIDXqsJwg7JSpIOqwgOyguOyYtCAuLgogICAgICAgICAgX2NvbW1lbnQ6IGUuZGF0YQogICAgICAgIH07CiAgICAgICAgY29udGV4dC5jb21taXQoJ3B1c2hUb0NvbW1lbnQnLCBvYmopOwogICAgICB9KTsKICAgIH0sCiAgICBleHRyYUNvbW1lbnRzOiBmdW5jdGlvbiBleHRyYUNvbW1lbnRzKGNvbnRleHQsIGl0ZW0pIHsKICAgICAgLy/sl5Hsi5zsmKTsiqQg7Zi47LacCiAgICAgIC8v7J20IOu2gOu2hOyXkOyXkOyEnCB7IHBhcmFtcyA6IHsgaWR4IDogaXRlbS5pZHgsIG51bWJlciA6IHRoaXMuY29tbWVudHNPblZpZXd9feuEmOqyqOykjC4uIDEy6rCcCiAgICAgIGF4aW9zLmdldCgnL0JvYXJkQ29tbWVudC5qc29uJykudGhlbihmdW5jdGlvbiAoZSkgewogICAgICAgIHZhciBfaXRlcmF0b3I0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZS5kYXRhKSwKICAgICAgICAgICAgX3N0ZXA0OwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3I0LnMoKTsgIShfc3RlcDQgPSBfaXRlcmF0b3I0Lm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIF9pdGVtMiA9IF9zdGVwNC52YWx1ZTsKICAgICAgICAgICAgX2l0ZW0yLmlzT3BlbiA9IGZhbHNlOwogICAgICAgICAgICBfaXRlbTIuaXNVcGRhdGUgPSBmYWxzZTsKICAgICAgICAgICAgX2l0ZW0yLmlzRmluaXNoID0gZmFsc2U7CiAgICAgICAgICAgIF9pdGVtMi5pc01vZGlmeSA9IHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yNC5mKCk7CiAgICAgICAgfQoKICAgICAgICBpdGVtLmNvbW1lbnRzT25WaWV3ICs9IGUuZGF0YS5sZW5ndGg7CiAgICAgICAgdmFyIHBheWxvYWQgPSB7CiAgICAgICAgICBib2FyZDogaXRlbSwKICAgICAgICAgIGNvbW1lbnRMaXN0OiBlLmRhdGEKICAgICAgICB9OyAvL+qwgOyguOyYqCDrjbDsnbTthLAg666k7YWM7J207IWY7Jy866GcIOuwlOq/lOyjvOq4sAoKICAgICAgICBjb250ZXh0LmNvbW1pdCgnYWRkaW5nVG9Db21tZW50TGlzdCcsIHBheWxvYWQpOwogICAgICB9KTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IGNvbW11bml0eTs="},{"version":3,"sources":["/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/store/modules/noAccess/community.js"],"names":["axios","community","namespaced","state","boardList","numberOfArticle","articlesOnView","content","mutations","pushToBoardList","payload","isModify","push","setNumberOfArticle","setArticlesOnView","length","addingToArticlesOnView","pushToComment","item","_board","댓글","댓글수","_comment","commentsOnView","changeIsOpen","열렸니","changeIsUpdate","수정했니","addingToCommentList","board","commentList","changeCommentsIsOpen","isOpen","changeCommentsIsUpdate","isUpdate","changeIsFinish","isFinish","changeIsModify","changeBoardIsModify","sendingNewContent","newContent","actions","getBoardList","context","get","then","e","data","commit","getBoardNum","articleNum","getMoreList","getComments","console","log","obj","extraComments"],"mappings":"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","sourcesContent":["//import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nconst community = {\r\n  namespaced: true,\r\n\r\n  state: {\r\n    boardList : [],\r\n    numberOfArticle : 0,\r\n    articlesOnView : 0,\r\n    content : '',\r\n  },\r\n  \r\n  mutations: {\r\n    pushToBoardList(state, payload){\r\n      payload[\"열렸니\"] = false\r\n      payload[\"수정했니\"] = false\r\n      payload.isModify = true\r\n      state.boardList.push(payload)\r\n    },\r\n\r\n    setNumberOfArticle(state, payload){\r\n      state.numberOfArticle = payload\r\n    },\r\n\r\n    setArticlesOnView(state){\r\n      state.articlesOnView = state.boardList.length\r\n    },\r\n\r\n    addingToArticlesOnView(state, payload) {\r\n      state.articlesOnView += payload\r\n    },\r\n\r\n    pushToComment(state, item) {\r\n      if(item._board.댓글.length !== 0 || item._board.댓글수 === 0){\r\n        return\r\n      }\r\n\r\n      item._board.댓글.push(...item._comment)\r\n      item._board.commentsOnView = item._comment.length;\r\n    },\r\n\r\n    //---------------게시글 관련 ------------------\r\n    changeIsOpen(state, payload){\r\n      payload.열렸니 = !payload.열렸니\r\n      state\r\n    },\r\n    changeIsUpdate(state, payload){\r\n      payload.수정했니 = !payload.수정했니\r\n      state\r\n    },\r\n    //--------------------------------------------\r\n\r\n    // 해당 게시물 댓글 리스트에 댓글 추가\r\n    addingToCommentList(state, payload) {\r\n      state\r\n      payload.board.댓글.push(...payload.commentList)\r\n    },\r\n    //----------------댓글 관련!!!-------------------\r\n    changeCommentsIsOpen(state, payload){\r\n      payload.isOpen = !payload.isOpen\r\n      state\r\n    },\r\n    changeCommentsIsUpdate(state, payload){\r\n      payload.isUpdate = !payload.isUpdate\r\n      state\r\n    },\r\n    changeIsFinish(state, payload){\r\n      payload.isFinish = !payload.isFinish\r\n      state\r\n    },\r\n    changeIsModify(state, payload){\r\n      payload.isModify = !payload.isModify\r\n      state\r\n    },\r\n    //-------------------------------------------\r\n    changeBoardIsModify(state, payload){\r\n      payload.isModify = !payload.isModify\r\n      state\r\n    },\r\n    sendingNewContent(state, payload){\r\n      state.content = payload.content\r\n      newContent\r\n      state\r\n    }\r\n  },\r\n  \r\n  actions: {\r\n    //articleOnView state에 ?\r\n    getBoardList(context){\r\n      axios.get('/BoardList.json')\r\n                .then(e => {\r\n                  for(let item of e.data){\r\n                    context.commit('pushToBoardList', item)\r\n                  } \r\n                  context.commit('setArticlesOnView')\r\n                })\r\n    },\r\n    getBoardNum(context){\r\n      axios.get('/articleNum.json')\r\n                .then(e => {\r\n                context.commit('setNumberOfArticle', e.data.articleNum)\r\n                })\r\n    },\r\n    //원래는 이 부분에서 현재보여지는 게시글의 개수인 articleOnView를 같이 넘김\r\n    //Controller에서 보여지는 개시글의 개수를 받아서 jpa문법으로 페이징처리를 위함\r\n    //params : {articleNum : this.articleOnView}\r\n    getMoreList(context){\r\n      axios.get('/BoardList.json')\r\n                .then(e => {\r\n                  for(let item of e.data){\r\n                    context.commit('pushToBoardList', item)\r\n                  }\r\n                  context.commit('setArticlesOnView')\r\n                  // context.articlesOnView += e.data.length\r\n                })\r\n    },\r\n\r\n    //컨트롤러에서 Comment찾아서 { params : {idx : item.idx, number : this.commentsOnView }}\r\n    //commentsOnView는 여기서 params로 0을 넘겨줌\r\n    //context.state.commentsOnView 이렇게 매개변수  넘겨줌\r\n    getComments(context, item) {\r\n      axios.get('/BoardComment.json').then(e => {\r\n        context.commit('changeIsOpen', item)\r\n        \r\n        for(let item of e.data){\r\n          item.isOpen = false\r\n          item.isUpdate = false\r\n          item.isFinish = false\r\n          item.isModify = true\r\n        }\r\n        console.log(e.data)\r\n        const obj = {\r\n          //해당 게시글 object\r\n          _board: item,\r\n          //ex) 댓글 5개 씩 가져옴 ..\r\n          _comment: e.data\r\n        }\r\n        context.commit('pushToComment', obj)\r\n      })\r\n    },\r\n\r\n    extraComments(context, item) {\r\n      //엑시오스 호출\r\n      //이 부분에에서 { params : { idx : item.idx, number : this.commentsOnView}}넘겨줌.. 12개\r\n      axios.get('/BoardComment.json').then(e => {\r\n        for(let item of e.data){\r\n          item.isOpen = false\r\n          item.isUpdate = false\r\n          item.isFinish = false\r\n          item.isModify = true\r\n        }\r\n        item.commentsOnView += e.data.length;\r\n        const payload = {\r\n          board: item,\r\n          commentList : e.data\r\n        }\r\n        //가져온 데이터 뮤테이션으로 바꿔주기\r\n        context.commit('addingToCommentList', payload)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default community"]}]}