{"remainingRequest":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue?vue&type=template&id=0b7d99ea&scoped=true","dependencies":[{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue","mtime":1638959934908},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/babel.config.js","mtime":1638249462730},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js","mtime":1638249467481},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1638249479716},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1638249479707}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtMGI3ZDk5ZWEiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAicm91dGVyLXdyYXBwZXIyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogIm5hbWUtZGl2Igp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJpY29uLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJpY29uLWRpdiIKfTsKdmFyIF9ob2lzdGVkXzUgPSBbIm9uQ2xpY2siXTsKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJpY29uLWRpdiIKfTsKdmFyIF9ob2lzdGVkXzcgPSBbIm9uQ2xpY2siXTsKdmFyIF9ob2lzdGVkXzggPSBbIm9uQ2xpY2siXTsKdmFyIF9ob2lzdGVkXzkgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiY29udGVudC1kaXYgbm8tcmVhZC1vbmx5Igp9Owp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAiY29udGVudC1kaXYgcmVhZC1vbmx5Igp9Owp2YXIgX2hvaXN0ZWRfMTEgPSB7CiAgaWQ6ICJidG4tZGl2Igp9Owp2YXIgX2hvaXN0ZWRfMTIgPSBbIm9uQ2xpY2siXTsKCnZhciBfaG9pc3RlZF8xMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICAgIGNsYXNzOiAiY29tbWVudC1pbnB1dCIsCiAgICB0eXBlOiAidGV4dCIsCiAgICBwbGFjZWhvbGRlcjogIuuMk+q4gOydhCDsnoXroKXtlZjshLjsmpQiCiAgfSldLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8xNCA9IHsKICBpZDogImNvbW1lbnQtaW5zZXJ0LWRpdiIKfTsKdmFyIF9ob2lzdGVkXzE1ID0gWyJvbkNsaWNrIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgdmFyIF9jb21wb25lbnRfZWRpdG9yID0gX3Jlc29sdmVDb21wb25lbnQoImVkaXRvciIpOwoKICB2YXIgX2NvbXBvbmVudF9Cb2FyZENvbW1lbnQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQm9hcmRDb21tZW50Iik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgIG9uU2Nyb2xsOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmdldEFydGljbGUgJiYgJG9wdGlvbnMuZ2V0QXJ0aWNsZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgY2xhc3M6ICJyb3V0ZXItd3JhcHBlciIKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QodGhpcy5ib2FyZExpc3QsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogImJvYXJkIiwKICAgICAga2V5OiBpbmRleAogICAgfSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyhpdGVtLm5hbWUpLCAxCiAgICAvKiBURVhUICovCiAgICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKGl0ZW0uZGF0ZSksIDEKICAgIC8qIFRFWFQgKi8KICAgICldKSwgaXRlbS7siJjsoJXtlojri4ggPT09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfdGhpcy51cGRhdGVDaGVjayA9PSBmYWxzZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImkiLCB7CiAgICAgIGtleTogMCwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICBfdGhpcy5jaGFuZ2VCb2FyZElzTW9kaWZ5KGl0ZW0pOwoKICAgICAgICBfdGhpcy5jaGFuZ2VJc1VwZGF0ZShpdGVtKTsKICAgICAgfSwKICAgICAgY2xhc3M6ICJmYXMgZmEtZWRpdCIKICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzUpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMuZGVsZXRlQm9hcmQoaXRlbSk7CiAgICAgIH0sCiAgICAgIGNsYXNzOiAiZmFyIGZhLXRyYXNoLWFsdCIKICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzcpXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiDrsJHsnZggZGl27JeQ64uk6rCAIHVwZGF0ZSBheGlvc+ulvCDtlZjripQg66mU7IaM65OcIOydtOumhOydhCBAY2xpY2vsl5Dri6TqsIAg7LaU6rCAIildKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIGl0ZW0u7IiY7KCV7ZaI64uIID09PSB0cnVlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBrZXk6IDEsCiAgICAgIGlkOiAiZmluaXNoLWRpdiIsCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgJG9wdGlvbnMuZXhwb3J0RmluaXNoKGl0ZW0pOwogICAgICAgICRvcHRpb25zLmluY3JlYXNpbmdJc0V4cG9ydFVwZGF0ZSgpOwogICAgICB9CiAgICB9LCAiRmluaXNoICIsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzgpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pLCBpdGVtLmlzTW9kaWZ5ID09IHRydWUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF85LCBfdG9EaXNwbGF5U3RyaW5nKGl0ZW0uY29udGVudCksIDEKICAgIC8qIFRFWFQgKi8KICAgICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBpdGVtLmlzTW9kaWZ5ID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTAsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lZGl0b3IsIHsKICAgICAgb3JpZ2luQ29udGVudDogaXRlbSwKICAgICAgaXNFeHBvcnQ6ICRkYXRhLmlzRXhwb3J0LAogICAgICBvbkV4cG9ydENvbnRlbnQ6ICRvcHRpb25zLmdldENvbnRlbnQsCiAgICAgIGNsYXNzOiAiY29udGVudC1kaXYiCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbIm9yaWdpbkNvbnRlbnQiLCAiaXNFeHBvcnQiLCAib25FeHBvcnRDb250ZW50Il0pXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMuZ2V0Q29tbWVudExpc3QoaXRlbSk7CiAgICAgIH0sCiAgICAgIGNsYXNzOiAiY29tbWVudC1idG4iCiAgICB9LCAi64yT6riAICIgKyBfdG9EaXNwbGF5U3RyaW5nKGl0ZW0u64yT6riA7IiYKSArICLqsJwiLCA5CiAgICAvKiBURVhULCBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF8xMildKSwgX2hvaXN0ZWRfMTMsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE0LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgICBjbGFzczogImNvbW1lbnQtYnRuIiwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMuaW5zZXJ0Q29tbWVudChpdGVtKTsKICAgICAgfQogICAgfSwgIuuTseuhnSIsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzE1KV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Cb2FyZENvbW1lbnQsIHsKICAgICAgYm9hcmQ6IGl0ZW0KICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIFsiYm9hcmQiXSldKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pXSwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICk7Cn0="},{"version":3,"sources":["/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div @scroll=\"getArticle\" class=\"router-wrapper\">\r\n    <div class=\"router-wrapper2\">\r\n        <div class=\"board\" v-for=\"(item, index) in this.boardList\" :key=\"index\">\r\n            <div class=\"name-div\">\r\n                \r\n                <div>\r\n                    <div>{{item.name}}</div>\r\n                    <div>{{item.date}}</div>\r\n                </div>\r\n                \r\n                <div class=\"icon-container\" v-if=\"item.수정했니 === false\">\r\n                    <div class=\"icon-div\">\r\n                        <i @click=\"this.changeBoardIsModify(item); \r\n                                   this.changeIsUpdate(item);\"\r\n                                    class=\"fas fa-edit\"\r\n                            v-if=\"this.updateCheck == false\"></i>\r\n                    </div>\r\n                    <div class=\"icon-div\">\r\n                        <i @click=\"deleteBoard(item)\" class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                    <!-- 밑의 div에다가 update axios를 하는 메소드 이름을 @click에다가 추가-->\r\n                </div>\r\n                    <div id=\"finish-div\" v-if=\"item.수정했니 === true\"\r\n                                        @click=\"exportFinish(item); increasingIsExportUpdate()\">Finish\r\n                    </div>\r\n            </div>\r\n            <div class=\"content-div no-read-only\" v-if=\"item.isModify == true\">\r\n                {{ item.content }}\r\n            </div>\r\n\r\n            <div class=\"content-div read-only\" v-if=\"item.isModify == false\">\r\n                <editor :originContent=\"item\" :isExport=\"isExport\" @exportContent=\"getContent\" class=\"content-div\"/>\r\n            </div>\r\n            <div id=\"btn-div\">\r\n                <button @click=\"getCommentList(item)\" class=\"comment-btn\">댓글 {{ item.댓글수 }}개</button>\r\n            </div>\r\n            <div>\r\n                <input class=\"comment-input\" type=\"text\" placeholder=\"댓글을 입력하세요\">\r\n            </div>\r\n            <div id=\"comment-insert-div\">    \r\n                <button class=\"comment-btn\" @click=\"insertComment(item)\">등록</button>\r\n            </div>\r\n            <BoardComment :board=\"item\"/>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport BoardComment from '@/components/component/noAccess/Community/BoardComment.vue'\r\nimport {  mapActions, mapMutations, mapState } from 'vuex'\r\nimport editor from '../../global/editor.vue'\r\n\r\nexport default {\r\n    name : 'Free',\r\n\r\n    data(){\r\n        return {\r\n            updateContent : '',\r\n            axiosState : false,\r\n            //총 게시글 수\r\n            numberOfArticle : 0,\r\n            //보여지는 게시글 수\r\n            articlesOnView : 0,\r\n            isUpdate : false,\r\n            isExport : 0,\r\n        }\r\n    },\r\n    computed : {\r\n        ...mapState({\r\n            boardList : state=>state.community.boardList,\r\n            updateCheck : state => state.community.updateCheck\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions({\r\n            getBoardList : 'community/getBoardList',\r\n            getBoardNum : 'community/getBoardNum',\r\n            getMoreList : 'community/getMoreList',\r\n            getComments : 'community/getComments'\r\n        }),\r\n        ...mapMutations({\r\n            changeIsUpdate : 'community/changeIsUpdate',\r\n            changeBoardIsModify : 'community/changeBoardIsModify',\r\n            changeUpdateCheck : 'community/changeUpdateCheck',\r\n        }),\r\n        \r\n        exportFinish(item) {\r\n            this.changeIsUpdate(item); \r\n            this.changeBoardIsModify(item);\r\n        },\r\n\r\n        increasingIsExportUpdate(){\r\n            this.isExport++\r\n        },\r\n\r\n        getContent(e) {\r\n            console.log('오니??')\r\n            console.log(e)\r\n        },\r\n\r\n        getArticle(e){  \r\n            // if(this.articlesOnView === this.numberOfArticle) {\r\n            //     return\r\n            // }\r\n\r\n            const fullSroll = e.target.scrollHeight\r\n            const nowScroll = e.target.scrollTop\r\n\r\n            if((fullSroll - nowScroll) < (fullSroll / 1.5) && !this.axiosState) {\r\n                console.log(fullSroll)\r\n                console.log(nowScroll)\r\n\r\n                //원래는 이 부분에서 현재보여지는 게시글의 개수인 articlesOnView 같이 넘김\r\n                //Controller에서 보여지는 개시글의 개수를 받아서 jpa문법으로 페이징처리를 위함\r\n                //params : {articleNum : this.articleOnView}\r\n                this.getMoreList()\r\n            }\r\n        },\r\n        //게시판 삭제\r\n        deleteBoard(item){\r\n            this.axios\r\n                .delete('', null, {params : {\r\n                                    board : item,\r\n                                    token : sessionStorage.getItem('token')}})\r\n                .then(e =>{\r\n                    console.log(e)\r\n            })\r\n        },\r\n        //게시판 수정\r\n        updateBoard(item){\r\n            this.axios\r\n                .put('',null, {params : {board : item,\r\n                                content : this.updateContent,\r\n                                token : sessionStorage.getItem('token')}})\r\n                .then(e => {\r\n                    console.log(e);\r\n            });\r\n        },\r\n        getCommentList(item) {\r\n            if(item.댓글수 <= 0) {\r\n                return\r\n            }\r\n            this.getComments(item)\r\n        },\r\n        //댓글 등록\r\n        insertComment(item){\r\n            const commentContent = document.querySelector('.comment-input')\r\n            this.axios.post('url', null, { params :\r\n                                            { idx : item.idx, commentContent : commentContent.value } })\r\n                                            .then(e => {\r\n                                                console.log(e)\r\n                                                commentContent.value = ''\r\n                                            })\r\n        }\r\n\r\n    },\r\n\r\n    watch:{\r\n        isExport: function(){\r\n\r\n            let editor = document.querySelector('#content')\r\n            let multipleFiles = document.querySelector('#multipleFiles')\r\n                if(editor){\r\n                    \r\n                    let _data = editor.innerHTML\r\n                    let _files = multipleFiles.files\r\n                    console.log(_data)\r\n                    console.log(_files)\r\n                }\r\n        }  \r\n    },\r\n    \r\n    mounted() {\r\n        this.getBoardList()\r\n        \r\n        this.getBoardNum()\r\n    },\r\n\r\n    components : {\r\n        BoardComment,\r\n        editor,\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.board {\r\n    width: 60vw;\r\n    height: 80%;\r\n    background-color: #2C2F3B;\r\n    margin: 22px auto ;\r\n    border-radius: 15px;\r\n    color:white;\r\n    padding: 15px;\r\n    }\r\n.name-div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 10px;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n}\r\n.icon-div {\r\n    cursor: pointer;\r\n}\r\n\r\n.icon-container {\r\n    display: flex;\r\n    gap: 18px;\r\n\r\n}\r\n\r\n.content-div {\r\n    height: 300px;\r\n    color: white;\r\n    width: 100%;\r\n}\r\n\r\n.no-read-only {\r\n    padding: 20px;\r\n}\r\n\r\n.read-only {\r\n    margin-top: 20px;\r\n    height: 100%;\r\n}\r\n\r\n\r\n.router-wrapper {\r\n    overflow: scroll;\r\n    height: calc(100vh - 100px);\r\n   -ms-overflow-style: none; /* IE and Edge */\r\n    scrollbar-width: none; /* Firefox */\r\n}\r\n.router-wrapper::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n#finish-div {\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor : pointer;\r\n}\r\n.comment-btn {\r\n    color : black;\r\n}\r\n.comment-input {\r\n    border-radius: 10px;\r\n    background-color: #414556;\r\n    height: 20px;\r\n    color: #FFFFFF;\r\n    padding-left : 14px;\r\n    width: 96%;\r\n    margin-left: 8px;\r\n\r\n}\r\n#btn-div {\r\n    display: flex;\r\n    justify-content: right;\r\n    \r\n}\r\n.comment-btn {\r\n    background-color: #2C2F3B;\r\n    border-radius: 10px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    margin-right: 14px;\r\n    margin-bottom: 10px;\r\n}\r\n#comment-insert-div {\r\n    display: flex;\r\n    justify-content: right;\r\n    margin-top: 10px;\r\n}\r\n</style>"],"sourceRoot":""}]}