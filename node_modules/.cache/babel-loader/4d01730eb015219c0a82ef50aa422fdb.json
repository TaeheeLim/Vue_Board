{"remainingRequest":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/acess/projects/LatestChanges.vue?vue&type=script&lang=js","dependencies":[{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/acess/projects/LatestChanges.vue","mtime":1639096795957},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/babel.config.js","mtime":1638249462730},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js","mtime":1638249467481},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1638249479707}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NoYW5nZS1saXN0Jyk7Ci8vIGxldCBvZmZzZXQgPSAwOwovLyBjb250YWluZXIKLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgKGUpID0+IHsKLy8gICAgIG9mZnNldCArPSBNYXRoLnNpZ24oZS5kZWx0YVkpICogNjA7Ci8vICAgICBjb25zb2xlLmxvZyhlKQovLyAgICAgY29uc29sZS5sb2cob2Zmc2V0KQovLyAgICAgaWYgKG9mZnNldCA8IDApIHsKLy8gICAgICAgICBvZmZzZXQgPSAwOwovLyAgICAgfSBlbHNlIGlmIChvZmZzZXQgPiAxMDAwMCAtIHdpbmRvdy5pbm5lcldpZHRoKSB7Ci8vICAgICAgICAgb2Zmc2V0ID0gMTAwMDAgLSB3aW5kb3cuaW5uZXJXaWR0aDsKLy8gICAgIH0KLy8gICAgIC8vIGNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgtJHtvZmZzZXR9cHhgOwovLyB9KTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMYXRlc3RDaGFuZ2VzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgc2Nyb2xsOiAwLAogICAgICBvZmZzZXQ6IDAsCiAgICAgIGJveElubmVyV2lkdGg6IDAsCiAgICAgIGNvdW50TGVmdDogLTEsCiAgICAgIGNvdW50UmlnaHQ6IC0xCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy/qsIDroZwg7Iqk7YGs66GkIF5eCiAgICB3aGVlbDogZnVuY3Rpb24gd2hlZWwoZSkgewogICAgICB2YXIgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NoYW5nZS1saXN0Jyk7CiAgICAgIHZhciB3aGVlbERlbHRhID0gZS53aGVlbERlbHRhOwoKICAgICAgaWYgKHdoZWVsRGVsdGEgPiAwICYmIHRhcmdldC5vZmZzZXRXaWR0aCArIHRhcmdldC5zY3JvbGxMZWZ0IDwgdGFyZ2V0LnNjcm9sbFdpZHRoKSB7CiAgICAgICAgY29uc29sZS5sb2coIuyXrOq4sCDsmbzsqr0g66ee7KeAIik7CiAgICAgICAgdGFyZ2V0LnNjcm9sbExlZnQgPSB3aGVlbERlbHRhICogdGhpcy5jb3VudExlZnQ7CiAgICAgICAgdGhpcy5jb3VudExlZnQtLTsKICAgICAgICB0aGlzLmNvdW50UmlnaHQrKzsKICAgICAgfSBlbHNlIGlmICh3aGVlbERlbHRhIDwgMCAmJiB0YXJnZXQub2Zmc2V0V2lkdGggKyB0YXJnZXQuc2Nyb2xsTGVmdCA8IHRhcmdldC5zY3JvbGxXaWR0aCkgewogICAgICAgIHRhcmdldC5zY3JvbGxMZWZ0ID0gd2hlZWxEZWx0YSAqIHRoaXMuY291bnRSaWdodDsKICAgICAgICB0aGlzLmNvdW50UmlnaHQtLTsKICAgICAgICB0aGlzLmNvdW50TGVmdCsrOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30KfTs="},{"version":3,"sources":["/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/acess/projects/LatestChanges.vue"],"names":[],"mappings":"AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,eAAe;AACX,EAAA,IAAG,EAAI,eADI;AAEX,EAAA,IAFW,kBAEJ;AACH,WAAO;AACH,MAAA,KAAK,EAAE,MADJ;AAEH,MAAA,MAAM,EAAE,CAFL;AAGH,MAAA,MAAM,EAAE,CAHL;AAIH,MAAA,aAAa,EAAE,CAJZ;AAKH,MAAA,SAAS,EAAE,CAAC,CALT;AAMH,MAAA,UAAU,EAAE,CAAC;AANV,KAAP;AASH,GAZU;AAaX,EAAA,OAAO,EAAE;AACL;AACA,IAAA,KAFK,iBAEC,CAFD,EAEG;AACJ,UAAI,MAAK,GAAI,QAAQ,CAAC,aAAT,CAAuB,cAAvB,CAAb;AAEA,UAAI,UAAS,GAAI,CAAC,CAAC,UAAnB;;AAEA,UAAG,UAAS,GAAI,CAAb,IAAkB,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,UAA5B,GAAyC,MAAM,CAAC,WAArE,EAAiF;AAC7E,QAAA,OAAO,CAAC,GAAR,CAAY,UAAZ;AACA,QAAA,MAAM,CAAC,UAAP,GAAqB,UAAS,GAAI,KAAK,SAAvC;AACA,aAAK,SAAL;AACA,aAAK,UAAL;AACJ,OALA,MAKO,IAAI,UAAS,GAAI,CAAb,IAAkB,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,UAA5B,GAAyC,MAAM,CAAC,WAAtE,EAAmF;AACtF,QAAA,MAAM,CAAC,UAAP,GAAqB,UAAS,GAAI,KAAK,UAAvC;AACA,aAAK,UAAL;AACA,aAAK,SAAL;AACJ;AACJ;AAjBK,GAbE;AAiCX,EAAA,OAjCW,qBAiCD,CACV;AAlCW,CAAf","sourcesContent":["<template>\r\n<div id=\"change-head\">\r\n    Latest Changes\r\n</div>\r\n<div id=\"change-list\" @mousewheel=\"wheel\">\r\n    <div class=\"list-detail\" v-for=\"(a,i) in 50\" :key=\"i\">\r\n        <div class=\"list-wrapper\">\r\n            <div class=\"content\">\r\n                Test Project\r\n            </div>\r\n            <div class=\"content\">\r\n                <div>Issue</div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div>Schedule</div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// const container = document.querySelector('#change-list');\r\n// let offset = 0;\r\n// container\r\n// window.addEventListener('wheel', (e) => {\r\n//     offset += Math.sign(e.deltaY) * 60;\r\n//     console.log(e)\r\n//     console.log(offset)\r\n//     if (offset < 0) {\r\n//         offset = 0;\r\n//     } else if (offset > 10000 - window.innerWidth) {\r\n//         offset = 10000 - window.innerWidth;\r\n//     }\r\n    \r\n//     // container.style.transform = `translateX(-${offset}px`;\r\n// });\r\nexport default {\r\n    name : 'LatestChanges',\r\n    data() {\r\n        return {\r\n            color: '#fff',\r\n            scroll: 0,\r\n            offset: 0,\r\n            boxInnerWidth: 0,\r\n            countLeft: -1,\r\n            countRight: -1,\r\n        }\r\n        \r\n    },\r\n    methods: {\r\n        //가로 스크롤 ^^\r\n        wheel(e){\r\n            let target = document.querySelector('#change-list')\r\n\r\n            let wheelDelta = e.wheelDelta;\r\n\r\n            if(wheelDelta > 0 && target.offsetWidth + target.scrollLeft < target.scrollWidth){\r\n                console.log(\"여기 왼쪽 맞지\")\r\n                target.scrollLeft = (wheelDelta * this.countLeft);\r\n                this.countLeft--;\r\n                this.countRight++;\r\n            } else if (wheelDelta < 0 && target.offsetWidth + target.scrollLeft < target.scrollWidth) {\r\n                target.scrollLeft = (wheelDelta * this.countRight);\r\n                this.countRight--;\r\n                this.countLeft++;\r\n            }\r\n        }\r\n    },\r\n    \r\n    mounted() {\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#change-list {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 30px;\r\n    gap: 60px;\r\n    overflow: scroll;\r\n}\r\n\r\n.list-detail {\r\n    border-radius: 10px;\r\n    width: 240px; \r\n    height: 260px;\r\n    font-size: 20px;\r\n    background-color: #2C2F3B;\r\n    padding: 10px;\r\n    \r\n}\r\n\r\n.list-detail > div:first-child {\r\n    border-bottom: 1px solid #717790;\r\n    color: #717790;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.list-wrapper {\r\n    width: 180px;\r\n}\r\n\r\n</style>"],"sourceRoot":""}]}