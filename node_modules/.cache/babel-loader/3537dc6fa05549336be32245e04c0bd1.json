{"remainingRequest":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue?vue&type=script&lang=js","dependencies":[{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue","mtime":1638959934908},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/babel.config.js","mtime":1638249462730},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/babel-loader/lib/index.js","mtime":1638249467481},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/cache-loader/dist/cjs.js","mtime":1638249467723},{"path":"/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/node_modules/vue-loader-v16/dist/index.js","mtime":1638249479707}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21udC9jL1VzZXJzL1x1Qzc4NFx1RDBEQ1x1RDc2Qy9EZXNrdG9wL1x1Q0Q1Q1x1Qzg4NVx1RDUwNFx1Qjg1Q1x1QzgxRFx1RDJCOC92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgQm9hcmRDb21tZW50IGZyb20gJ0AvY29tcG9uZW50cy9jb21wb25lbnQvbm9BY2Nlc3MvQ29tbXVuaXR5L0JvYXJkQ29tbWVudC52dWUnOwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBNdXRhdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBlZGl0b3IgZnJvbSAnLi4vLi4vZ2xvYmFsL2VkaXRvci52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZyZWUnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cGRhdGVDb250ZW50OiAnJywKICAgICAgYXhpb3NTdGF0ZTogZmFsc2UsCiAgICAgIC8v7LSdIOqyjOyLnOq4gCDsiJgKICAgICAgbnVtYmVyT2ZBcnRpY2xlOiAwLAogICAgICAvL+uztOyXrOyngOuKlCDqsozsi5zquIAg7IiYCiAgICAgIGFydGljbGVzT25WaWV3OiAwLAogICAgICBpc1VwZGF0ZTogZmFsc2UsCiAgICAgIGlzRXhwb3J0OiAwCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKHsKICAgIGJvYXJkTGlzdDogZnVuY3Rpb24gYm9hcmRMaXN0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jb21tdW5pdHkuYm9hcmRMaXN0OwogICAgfSwKICAgIHVwZGF0ZUNoZWNrOiBmdW5jdGlvbiB1cGRhdGVDaGVjayhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY29tbXVuaXR5LnVwZGF0ZUNoZWNrOwogICAgfQogIH0pKSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyh7CiAgICBnZXRCb2FyZExpc3Q6ICdjb21tdW5pdHkvZ2V0Qm9hcmRMaXN0JywKICAgIGdldEJvYXJkTnVtOiAnY29tbXVuaXR5L2dldEJvYXJkTnVtJywKICAgIGdldE1vcmVMaXN0OiAnY29tbXVuaXR5L2dldE1vcmVMaXN0JywKICAgIGdldENvbW1lbnRzOiAnY29tbXVuaXR5L2dldENvbW1lbnRzJwogIH0pKSwgbWFwTXV0YXRpb25zKHsKICAgIGNoYW5nZUlzVXBkYXRlOiAnY29tbXVuaXR5L2NoYW5nZUlzVXBkYXRlJywKICAgIGNoYW5nZUJvYXJkSXNNb2RpZnk6ICdjb21tdW5pdHkvY2hhbmdlQm9hcmRJc01vZGlmeScsCiAgICBjaGFuZ2VVcGRhdGVDaGVjazogJ2NvbW11bml0eS9jaGFuZ2VVcGRhdGVDaGVjaycKICB9KSksIHt9LCB7CiAgICBleHBvcnRGaW5pc2g6IGZ1bmN0aW9uIGV4cG9ydEZpbmlzaChpdGVtKSB7CiAgICAgIHRoaXMuY2hhbmdlSXNVcGRhdGUoaXRlbSk7CiAgICAgIHRoaXMuY2hhbmdlQm9hcmRJc01vZGlmeShpdGVtKTsKICAgIH0sCiAgICBpbmNyZWFzaW5nSXNFeHBvcnRVcGRhdGU6IGZ1bmN0aW9uIGluY3JlYXNpbmdJc0V4cG9ydFVwZGF0ZSgpIHsKICAgICAgdGhpcy5pc0V4cG9ydCsrOwogICAgfSwKICAgIGdldENvbnRlbnQ6IGZ1bmN0aW9uIGdldENvbnRlbnQoZSkgewogICAgICBjb25zb2xlLmxvZygn7Jik64uIPz8nKTsKICAgICAgY29uc29sZS5sb2coZSk7CiAgICB9LAogICAgZ2V0QXJ0aWNsZTogZnVuY3Rpb24gZ2V0QXJ0aWNsZShlKSB7CiAgICAgIC8vIGlmKHRoaXMuYXJ0aWNsZXNPblZpZXcgPT09IHRoaXMubnVtYmVyT2ZBcnRpY2xlKSB7CiAgICAgIC8vICAgICByZXR1cm4KICAgICAgLy8gfQogICAgICB2YXIgZnVsbFNyb2xsID0gZS50YXJnZXQuc2Nyb2xsSGVpZ2h0OwogICAgICB2YXIgbm93U2Nyb2xsID0gZS50YXJnZXQuc2Nyb2xsVG9wOwoKICAgICAgaWYgKGZ1bGxTcm9sbCAtIG5vd1Njcm9sbCA8IGZ1bGxTcm9sbCAvIDEuNSAmJiAhdGhpcy5heGlvc1N0YXRlKSB7CiAgICAgICAgY29uc29sZS5sb2coZnVsbFNyb2xsKTsKICAgICAgICBjb25zb2xlLmxvZyhub3dTY3JvbGwpOyAvL+ybkOuemOuKlCDsnbQg67aA67aE7JeQ7IScIO2YhOyerOuztOyXrOyngOuKlCDqsozsi5zquIDsnZgg6rCc7IiY7J24IGFydGljbGVzT25WaWV3IOqwmeydtCDrhJjquYAKICAgICAgICAvL0NvbnRyb2xsZXLsl5DshJwg67O07Jes7KeA64qUIOqwnOyLnOq4gOydmCDqsJzsiJjrpbwg67Cb7JWE7IScIGpwYeusuOuyleycvOuhnCDtjpjsnbTsp5Xsspjrpqzrpbwg7JyE7ZWoCiAgICAgICAgLy9wYXJhbXMgOiB7YXJ0aWNsZU51bSA6IHRoaXMuYXJ0aWNsZU9uVmlld30KCiAgICAgICAgdGhpcy5nZXRNb3JlTGlzdCgpOwogICAgICB9CiAgICB9LAogICAgLy/qsozsi5ztjJAg7IKt7KCcCiAgICBkZWxldGVCb2FyZDogZnVuY3Rpb24gZGVsZXRlQm9hcmQoaXRlbSkgewogICAgICB0aGlzLmF4aW9zLmRlbGV0ZSgnJywgbnVsbCwgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgYm9hcmQ6IGl0ZW0sCiAgICAgICAgICB0b2tlbjogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICAvL+qyjOyLnO2MkCDsiJjsoJUKICAgIHVwZGF0ZUJvYXJkOiBmdW5jdGlvbiB1cGRhdGVCb2FyZChpdGVtKSB7CiAgICAgIHRoaXMuYXhpb3MucHV0KCcnLCBudWxsLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBib2FyZDogaXRlbSwKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMudXBkYXRlQ29udGVudCwKICAgICAgICAgIHRva2VuOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldENvbW1lbnRMaXN0OiBmdW5jdGlvbiBnZXRDb21tZW50TGlzdChpdGVtKSB7CiAgICAgIGlmIChpdGVtLuuMk+q4gOyImCA8PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmdldENvbW1lbnRzKGl0ZW0pOwogICAgfSwKICAgIC8v64yT6riAIOuTseuhnQogICAgaW5zZXJ0Q29tbWVudDogZnVuY3Rpb24gaW5zZXJ0Q29tbWVudChpdGVtKSB7CiAgICAgIHZhciBjb21tZW50Q29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb21tZW50LWlucHV0Jyk7CiAgICAgIHRoaXMuYXhpb3MucG9zdCgndXJsJywgbnVsbCwgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWR4OiBpdGVtLmlkeCwKICAgICAgICAgIGNvbW1lbnRDb250ZW50OiBjb21tZW50Q29udGVudC52YWx1ZQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIGNvbW1lbnRDb250ZW50LnZhbHVlID0gJyc7CiAgICAgIH0pOwogICAgfQogIH0pLAogIHdhdGNoOiB7CiAgICBpc0V4cG9ydDogZnVuY3Rpb24gaXNFeHBvcnQoKSB7CiAgICAgIHZhciBlZGl0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpOwogICAgICB2YXIgbXVsdGlwbGVGaWxlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtdWx0aXBsZUZpbGVzJyk7CgogICAgICBpZiAoZWRpdG9yKSB7CiAgICAgICAgdmFyIF9kYXRhID0gZWRpdG9yLmlubmVySFRNTDsKICAgICAgICB2YXIgX2ZpbGVzID0gbXVsdGlwbGVGaWxlcy5maWxlczsKICAgICAgICBjb25zb2xlLmxvZyhfZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2coX2ZpbGVzKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0Qm9hcmRMaXN0KCk7CiAgICB0aGlzLmdldEJvYXJkTnVtKCk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBCb2FyZENvbW1lbnQ6IEJvYXJkQ29tbWVudCwKICAgIGVkaXRvcjogZWRpdG9yCiAgfQp9Ow=="},{"version":3,"sources":["/mnt/c/Users/임태희/Desktop/최종프로젝트/vue/src/components/component/noAccess/Community/Free.vue"],"names":[],"mappings":";AAkDA,OAAO,YAAP,MAAyB,4DAAzB;AACA,SAAU,UAAV,EAAsB,YAAtB,EAAoC,QAApC,QAAoD,MAApD;AACA,OAAO,MAAP,MAAmB,yBAAnB;AAEA,eAAe;AACX,EAAA,IAAG,EAAI,MADI;AAGX,EAAA,IAHW,kBAGL;AACF,WAAO;AACH,MAAA,aAAY,EAAI,EADb;AAEH,MAAA,UAAS,EAAI,KAFV;AAGH;AACA,MAAA,eAAc,EAAI,CAJf;AAKH;AACA,MAAA,cAAa,EAAI,CANd;AAOH,MAAA,QAAO,EAAI,KAPR;AAQH,MAAA,QAAO,EAAI;AARR,KAAP;AAUH,GAdU;AAeX,EAAA,QAAO,oBACA,QAAQ,CAAC;AACR,IAAA,SAAQ,EAAI,mBAAA,KAAK;AAAA,aAAE,KAAK,CAAC,SAAN,CAAgB,SAAlB;AAAA,KADT;AAER,IAAA,WAAU,EAAI,qBAAA,KAAI;AAAA,aAAK,KAAK,CAAC,SAAN,CAAgB,WAArB;AAAA;AAFV,GAAD,CADR,CAfI;AAsBX,EAAA,OAAO,gDACA,UAAU,CAAC;AACV,IAAA,YAAW,EAAI,wBADL;AAEV,IAAA,WAAU,EAAI,uBAFJ;AAGV,IAAA,WAAU,EAAI,uBAHJ;AAIV,IAAA,WAAU,EAAI;AAJJ,GAAD,CADV,GAOA,YAAY,CAAC;AACZ,IAAA,cAAa,EAAI,0BADL;AAEZ,IAAA,mBAAkB,EAAI,+BAFV;AAGZ,IAAA,iBAAgB,EAAI;AAHR,GAAD,CAPZ;AAaH,IAAA,YAbG,wBAaU,IAbV,EAagB;AACf,WAAK,cAAL,CAAoB,IAApB;AACA,WAAK,mBAAL,CAAyB,IAAzB;AACH,KAhBE;AAkBH,IAAA,wBAlBG,sCAkBuB;AACtB,WAAK,QAAL;AACH,KApBE;AAsBH,IAAA,UAtBG,sBAsBQ,CAtBR,EAsBW;AACV,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACH,KAzBE;AA2BH,IAAA,UA3BG,sBA2BQ,CA3BR,EA2BU;AACT;AACA;AACA;AAEA,UAAM,SAAQ,GAAI,CAAC,CAAC,MAAF,CAAS,YAA3B;AACA,UAAM,SAAQ,GAAI,CAAC,CAAC,MAAF,CAAS,SAA3B;;AAEA,UAAI,SAAQ,GAAI,SAAb,GAA2B,SAAQ,GAAI,GAAvC,IAA+C,CAAC,KAAK,UAAxD,EAAoE;AAChE,QAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,SAAZ,EAFgE,CAIhE;AACA;AACA;;AACA,aAAK,WAAL;AACJ;AACH,KA5CE;AA6CH;AACA,IAAA,WA9CG,uBA8CS,IA9CT,EA8Cc;AACb,WAAK,KAAL,CACK,MADL,CACY,EADZ,EACgB,IADhB,EACsB;AAAC,QAAA,MAAK,EAAI;AACR,UAAA,KAAI,EAAI,IADA;AAER,UAAA,KAAI,EAAI,cAAc,CAAC,OAAf,CAAuB,OAAvB;AAFA;AAAV,OADtB,EAIK,IAJL,CAIU,UAAA,CAAA,EAAI;AACN,QAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACP,OAND;AAOH,KAtDE;AAuDH;AACA,IAAA,WAxDG,uBAwDS,IAxDT,EAwDc;AACb,WAAK,KAAL,CACK,GADL,CACS,EADT,EACY,IADZ,EACkB;AAAC,QAAA,MAAK,EAAI;AAAC,UAAA,KAAI,EAAI,IAAT;AACR,UAAA,OAAM,EAAI,KAAK,aADP;AAER,UAAA,KAAI,EAAI,cAAc,CAAC,OAAf,CAAuB,OAAvB;AAFA;AAAV,OADlB,EAIK,IAJL,CAIU,UAAA,CAAA,EAAK;AACP,QAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACP,OAND;AAOH,KAhEE;AAiEH,IAAA,cAjEG,0BAiEY,IAjEZ,EAiEkB;AACjB,UAAG,IAAI,CAAC,GAAL,IAAY,CAAf,EAAkB;AACd;AACJ;;AACA,WAAK,WAAL,CAAiB,IAAjB;AACH,KAtEE;AAuEH;AACA,IAAA,aAxEG,yBAwEW,IAxEX,EAwEgB;AACf,UAAM,cAAa,GAAI,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CAAvB;AACA,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B;AAAE,QAAA,MAAK,EACJ;AAAE,UAAA,GAAE,EAAI,IAAI,CAAC,GAAb;AAAkB,UAAA,cAAa,EAAI,cAAc,CAAC;AAAlD;AADH,OAA7B,EAEiC,IAFjC,CAEsC,UAAA,CAAA,EAAK;AACP,QAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACA,QAAA,cAAc,CAAC,KAAf,GAAuB,EAAvB;AACH,OALjC;AAMJ;AAhFG,IAtBI;AA0GX,EAAA,KAAK,EAAC;AACF,IAAA,QAAQ,EAAE,oBAAU;AAEhB,UAAI,MAAK,GAAI,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CAAb;AACA,UAAI,aAAY,GAAI,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CAApB;;AACI,UAAG,MAAH,EAAU;AAEN,YAAI,KAAI,GAAI,MAAM,CAAC,SAAnB;AACA,YAAI,MAAK,GAAI,aAAa,CAAC,KAA3B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACJ;AACR;AAZE,GA1GK;AAyHX,EAAA,OAzHW,qBAyHD;AACN,SAAK,YAAL;AAEA,SAAK,WAAL;AACH,GA7HU;AA+HX,EAAA,UAAS,EAAI;AACT,IAAA,YAAY,EAAZ,YADS;AAET,IAAA,MAAM,EAAN;AAFS;AA/HF,CAAf","sourcesContent":["<template>\r\n<div @scroll=\"getArticle\" class=\"router-wrapper\">\r\n    <div class=\"router-wrapper2\">\r\n        <div class=\"board\" v-for=\"(item, index) in this.boardList\" :key=\"index\">\r\n            <div class=\"name-div\">\r\n                \r\n                <div>\r\n                    <div>{{item.name}}</div>\r\n                    <div>{{item.date}}</div>\r\n                </div>\r\n                \r\n                <div class=\"icon-container\" v-if=\"item.수정했니 === false\">\r\n                    <div class=\"icon-div\">\r\n                        <i @click=\"this.changeBoardIsModify(item); \r\n                                   this.changeIsUpdate(item);\"\r\n                                    class=\"fas fa-edit\"\r\n                            v-if=\"this.updateCheck == false\"></i>\r\n                    </div>\r\n                    <div class=\"icon-div\">\r\n                        <i @click=\"deleteBoard(item)\" class=\"far fa-trash-alt\"></i>\r\n                    </div>\r\n                    <!-- 밑의 div에다가 update axios를 하는 메소드 이름을 @click에다가 추가-->\r\n                </div>\r\n                    <div id=\"finish-div\" v-if=\"item.수정했니 === true\"\r\n                                        @click=\"exportFinish(item); increasingIsExportUpdate()\">Finish\r\n                    </div>\r\n            </div>\r\n            <div class=\"content-div no-read-only\" v-if=\"item.isModify == true\">\r\n                {{ item.content }}\r\n            </div>\r\n\r\n            <div class=\"content-div read-only\" v-if=\"item.isModify == false\">\r\n                <editor :originContent=\"item\" :isExport=\"isExport\" @exportContent=\"getContent\" class=\"content-div\"/>\r\n            </div>\r\n            <div id=\"btn-div\">\r\n                <button @click=\"getCommentList(item)\" class=\"comment-btn\">댓글 {{ item.댓글수 }}개</button>\r\n            </div>\r\n            <div>\r\n                <input class=\"comment-input\" type=\"text\" placeholder=\"댓글을 입력하세요\">\r\n            </div>\r\n            <div id=\"comment-insert-div\">    \r\n                <button class=\"comment-btn\" @click=\"insertComment(item)\">등록</button>\r\n            </div>\r\n            <BoardComment :board=\"item\"/>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport BoardComment from '@/components/component/noAccess/Community/BoardComment.vue'\r\nimport {  mapActions, mapMutations, mapState } from 'vuex'\r\nimport editor from '../../global/editor.vue'\r\n\r\nexport default {\r\n    name : 'Free',\r\n\r\n    data(){\r\n        return {\r\n            updateContent : '',\r\n            axiosState : false,\r\n            //총 게시글 수\r\n            numberOfArticle : 0,\r\n            //보여지는 게시글 수\r\n            articlesOnView : 0,\r\n            isUpdate : false,\r\n            isExport : 0,\r\n        }\r\n    },\r\n    computed : {\r\n        ...mapState({\r\n            boardList : state=>state.community.boardList,\r\n            updateCheck : state => state.community.updateCheck\r\n        })\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions({\r\n            getBoardList : 'community/getBoardList',\r\n            getBoardNum : 'community/getBoardNum',\r\n            getMoreList : 'community/getMoreList',\r\n            getComments : 'community/getComments'\r\n        }),\r\n        ...mapMutations({\r\n            changeIsUpdate : 'community/changeIsUpdate',\r\n            changeBoardIsModify : 'community/changeBoardIsModify',\r\n            changeUpdateCheck : 'community/changeUpdateCheck',\r\n        }),\r\n        \r\n        exportFinish(item) {\r\n            this.changeIsUpdate(item); \r\n            this.changeBoardIsModify(item);\r\n        },\r\n\r\n        increasingIsExportUpdate(){\r\n            this.isExport++\r\n        },\r\n\r\n        getContent(e) {\r\n            console.log('오니??')\r\n            console.log(e)\r\n        },\r\n\r\n        getArticle(e){  \r\n            // if(this.articlesOnView === this.numberOfArticle) {\r\n            //     return\r\n            // }\r\n\r\n            const fullSroll = e.target.scrollHeight\r\n            const nowScroll = e.target.scrollTop\r\n\r\n            if((fullSroll - nowScroll) < (fullSroll / 1.5) && !this.axiosState) {\r\n                console.log(fullSroll)\r\n                console.log(nowScroll)\r\n\r\n                //원래는 이 부분에서 현재보여지는 게시글의 개수인 articlesOnView 같이 넘김\r\n                //Controller에서 보여지는 개시글의 개수를 받아서 jpa문법으로 페이징처리를 위함\r\n                //params : {articleNum : this.articleOnView}\r\n                this.getMoreList()\r\n            }\r\n        },\r\n        //게시판 삭제\r\n        deleteBoard(item){\r\n            this.axios\r\n                .delete('', null, {params : {\r\n                                    board : item,\r\n                                    token : sessionStorage.getItem('token')}})\r\n                .then(e =>{\r\n                    console.log(e)\r\n            })\r\n        },\r\n        //게시판 수정\r\n        updateBoard(item){\r\n            this.axios\r\n                .put('',null, {params : {board : item,\r\n                                content : this.updateContent,\r\n                                token : sessionStorage.getItem('token')}})\r\n                .then(e => {\r\n                    console.log(e);\r\n            });\r\n        },\r\n        getCommentList(item) {\r\n            if(item.댓글수 <= 0) {\r\n                return\r\n            }\r\n            this.getComments(item)\r\n        },\r\n        //댓글 등록\r\n        insertComment(item){\r\n            const commentContent = document.querySelector('.comment-input')\r\n            this.axios.post('url', null, { params :\r\n                                            { idx : item.idx, commentContent : commentContent.value } })\r\n                                            .then(e => {\r\n                                                console.log(e)\r\n                                                commentContent.value = ''\r\n                                            })\r\n        }\r\n\r\n    },\r\n\r\n    watch:{\r\n        isExport: function(){\r\n\r\n            let editor = document.querySelector('#content')\r\n            let multipleFiles = document.querySelector('#multipleFiles')\r\n                if(editor){\r\n                    \r\n                    let _data = editor.innerHTML\r\n                    let _files = multipleFiles.files\r\n                    console.log(_data)\r\n                    console.log(_files)\r\n                }\r\n        }  \r\n    },\r\n    \r\n    mounted() {\r\n        this.getBoardList()\r\n        \r\n        this.getBoardNum()\r\n    },\r\n\r\n    components : {\r\n        BoardComment,\r\n        editor,\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.board {\r\n    width: 60vw;\r\n    height: 80%;\r\n    background-color: #2C2F3B;\r\n    margin: 22px auto ;\r\n    border-radius: 15px;\r\n    color:white;\r\n    padding: 15px;\r\n    }\r\n.name-div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 10px;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n}\r\n.icon-div {\r\n    cursor: pointer;\r\n}\r\n\r\n.icon-container {\r\n    display: flex;\r\n    gap: 18px;\r\n\r\n}\r\n\r\n.content-div {\r\n    height: 300px;\r\n    color: white;\r\n    width: 100%;\r\n}\r\n\r\n.no-read-only {\r\n    padding: 20px;\r\n}\r\n\r\n.read-only {\r\n    margin-top: 20px;\r\n    height: 100%;\r\n}\r\n\r\n\r\n.router-wrapper {\r\n    overflow: scroll;\r\n    height: calc(100vh - 100px);\r\n   -ms-overflow-style: none; /* IE and Edge */\r\n    scrollbar-width: none; /* Firefox */\r\n}\r\n.router-wrapper::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n#finish-div {\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor : pointer;\r\n}\r\n.comment-btn {\r\n    color : black;\r\n}\r\n.comment-input {\r\n    border-radius: 10px;\r\n    background-color: #414556;\r\n    height: 20px;\r\n    color: #FFFFFF;\r\n    padding-left : 14px;\r\n    width: 96%;\r\n    margin-left: 8px;\r\n\r\n}\r\n#btn-div {\r\n    display: flex;\r\n    justify-content: right;\r\n    \r\n}\r\n.comment-btn {\r\n    background-color: #2C2F3B;\r\n    border-radius: 10px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    margin-right: 14px;\r\n    margin-bottom: 10px;\r\n}\r\n#comment-insert-div {\r\n    display: flex;\r\n    justify-content: right;\r\n    margin-top: 10px;\r\n}\r\n</style>"],"sourceRoot":""}]}