var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,l=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r,i=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&l(e,n,t[n]);if(r)for(var n of r(t))a.call(t,n)&&l(e,n,t[n]);return e};import c from"codemirror";import"codemirror/lib/codemirror.css";import{defineComponent as s,ref as u,onMounted as p,markRaw as d,watch as m,openBlock as g,createElementBlock as f,computed as h,getCurrentInstance as v,onBeforeUnmount as y,normalizeClass as b,normalizeStyle as w,createBlock as x,resolveDynamicComponent as O,mergeProps as k}from"vue";import"codemirror/addon/merge/merge.css";import"codemirror/addon/merge/merge.js";import S from"diff-match-patch";import"codemirror/addon/mode/simple.js";import*as j from"codemirror/lib/codemirror.js";const $=window.CodeMirror||c,E=s({name:"codemirror",props:{code:String,value:String,content:String,options:{type:Object,default:()=>({})},cminstance:{type:Object,default:()=>({})},placeholder:{type:String,default:""}},emits:["update:cminstance","ready"],setup(e,{emit:t}){const n=u(),r=u(null),o=()=>{r.value=d($.fromTextArea(n.value,e.options)),t("update:cminstance",d(r.value));let o=null;o=m((()=>e.cminstance),((n,a)=>{n&&e.cminstance.setValue(e.code||e.value||e.content),t("ready",r),o()}),{deep:!0})};return p((()=>{o()})),{initialize:o,textarea:n}}}),M=["name","placeholder"];E.render=function(e,t,n,r,o,a){return g(),f("textarea",{ref:"textarea",name:e.$props.name,placeholder:e.$props.placeholder},null,8,M)};const C=window.CodeMirror||c;window.diff_match_patch=S,window.DIFF_DELETE=-1,window.DIFF_INSERT=1,window.DIFF_EQUAL=0;const I=s({name:"mergemode",props:{options:{type:Object,default:()=>({})},cminstance:{type:Object,default:()=>({})},height:{type:[String,Number],default:null}},emits:["update:cminstance","ready"],setup(e,{emit:t}){const n=u(null),r=u(null);String(e.height).replace("px","");const o=()=>{n.value=d(C.MergeView(r.value,e.options)),t("update:cminstance",d(n.value.edit)),t("ready",n)};return p((()=>{o()})),{mergeView:r,initialize:o}}}),N={ref:"mergeView"};var A,F;function D(){const e=new Date;return`${e.getHours()<10?"0"+e.getHours():e.getHours()}:${e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes()}:${e.getSeconds()<10?"0"+e.getSeconds():e.getSeconds()}`}function L(e){return`#link#${JSON.stringify(e)}#link#`}function T(e){const t=/#link#(.+)#link#/g;let n,r=[];for(n=t.exec(e);n;){const o=document.createElement("a"),a=JSON.parse(n[1]),l=Object.entries(a);for(let[e,t]of l)o.setAttribute(e,t);o.className="editor_custom_link",o.innerHTML="logDownload",r.push({start:n.index,end:n.index+n[0].length,node:o}),n=t.exec(e)}return r}function V(e="",t="info"){return`#log<${t}>log#${e}#log<${t}>log#`}function _(e){let t=[];return function(){const n=new RegExp("#log<(\\w*)>log#((.|\r\n|\n)*?)#log<(\\w*)>log#","g");let r;for(r=n.exec(e);r;){let o=r[0].replace(/\r\n/g,"\n").split("\n"),a=r[2].replace(/\r\n/g,"\n").split("\n");const l=document.createElement("span");let i=r[1];l.className=`c-editor--log__${i}`;let c=0;for(let e=0;e<o.length;e++){let n=o[e],i=a[e],s=l.cloneNode(!1);s.innerText=i,t.push({start:r.index+c,end:r.index+c+n.length,node:s}),c=c+n.length+1}r=n.exec(e)}}(),t}function P(e,t=""){return`[${D()}] <${t}> ${e}`}function H(e="",t=20,n="="){const r=Math.floor(1.5*e.length/2);const o=new Array(Math.max(t-r,5)).join(n);return`${o}${e}${o}`}I.render=function(e,t,n,r,o,a){return g(),f("div",N,null,512)},(F=A||(A={})).info="info",F.warning="warning",F.error="error";const R=[{regex:/(\[.*?\])([ \t]*)(<error>[ \t])(.+)/,token:["tag",null,"error.strong","error.strong"],sol:!0},{regex:/(\[.*?\])([ \t]*)(<info>)(.+)(.?)/,token:["tag",null,"bracket","bracket","hr"],sol:!0},{regex:/(\[.*?\])([ \t]*)(<warning>)(.+)(.?)/,token:["tag",null,"comment","comment","hr"],sol:!0}];c.defineSimpleMode("fclog",{start:[...R,{regex:/.*/,token:"hr"}],error:[...R,{regex:/.*/,token:"error.strong"}],info:[...R,{regex:/.*/,token:"bracket"}],warning:[...R,{regex:/.*\[/,token:"comment"}]}),j.defineSimpleMode("log",{start:[{regex:/^[=]+[^=]*[=]+/,token:"strong"},{regex:/([^\w])([A-Z][\w]*)/,token:[null,"string"]},{regex:/(^[A-Z][\w]*)/,token:"string"}]});const B=window.CodeMirror||c,z=s({name:"codemirror-fclog",props:{code:String,value:String,content:String,options:{type:Object,default:()=>({})},cminstance:{type:Object,default:()=>({})},placeholder:{type:String,default:""},KeepCursorInEnd:{type:Boolean,default:!0}},emits:["update:cminstance","ready"],setup(e,{emit:t}){const n=u(),r=u(null),o=h((()=>e.KeepCursorInEnd)),a=(t=e.cminstance)=>{t.getAllMarks().forEach((e=>e.clear()));const n=t.getValue(),r=[].concat(T(n)).concat(_(n));for(let e=0;e<r.length;e++){const n=r[e];t.markText(t.posFromIndex(n.start),t.posFromIndex(n.end),{replacedWith:n.node})}},l=()=>{r.value=d(B.fromTextArea(n.value,e.options)),t("update:cminstance",d(r.value)),r.value.on("change",(t=>{a(),o&&Promise.resolve().then((()=>{let t=e.cminstance.getScrollInfo();e.cminstance.scrollTo(t.left,t.height)}))}))};return m((()=>e.cminstance),(n=>{n&&(a(e.cminstance),e.cminstance.setValue(e.code||e.value||e.content),t("ready",r))}),{deep:!0,immediate:!0}),p((()=>{l()})),{initialize:l,textarea:n}}}),W=["name","placeholder"];z.render=function(e,t,n,r,o,a){return g(),f("textarea",{ref:"textarea",name:e.$props.name,placeholder:e.$props.placeholder},null,8,W)},"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");const n=Object(e);for(let r=1;r<arguments.length;r++){const e=arguments[r];if(null!=e)for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n},writable:!0,configurable:!0});const K={mode:"text",theme:"default",lineNumbers:!0,smartIndent:!0,indentUnit:2,foldGutter:!0,matchBrackets:!0,autoCloseBrackets:!0,styleActiveLine:!0},U=["update:value","change","input","ready"],G=s({name:"CodemirrorEditor",props:{code:String,value:String,marker:Function,unseenLines:Array,name:{type:String,default:""},placeholder:{type:String,default:""},merge:{type:Boolean,default:!1},options:{type:Object,default:()=>({})},globalOptions:{type:Object,default:()=>({})},border:{type:Boolean,default:!1},width:{type:[String,Number],default:null},height:{type:[String,Number],default:null},KeepCursorInEnd:{type:Boolean,default:!1}},emits:[...U,"changes","scroll","beforeChange","cursorActivity","keyHandled","inputRead","electricInput","beforeSelectionChange","viewportChange","swapDoc","gutterClick","gutterContextMenu","focus","blur","refresh","optionChange","scrollCursorIntoView","update"],components:{Default:E,Merge:I,FcLog:z},setup(e,t){var n,r;const o=u(null),a=u(""),l=u("Default"),c=u(Object.assign(i({},K),e.globalOptions,e.options)),s=v(),p=u(null),d=u(null),g=u(null),f=(t=e.width,n=e.height)=>{d.value=String(t).replace("px",""),g.value=String(n).replace("px","");let r=g.value;e.merge&&(r-=2),o.value.setSize(d.value,r)},h=()=>{void 0!==e.unseenLines&&void 0!==marker&&e.unseenLines.forEach((e=>{const t=o.value.lineInfo(e);o.value.setGutterMarker(e,"breakpoints",t.gutterMarkers?null:marker())}))},{listenerEvents:b}=function({cminstance:e,ctx:t,internalInstance:n,content:r}){const o=()=>{let e=[];return Object.keys(n.vnode.props).forEach((t=>{if(t.startsWith("on")){let n=t.replace(t[2],t[2].toLowerCase()).slice(2);!U.includes(n)&&e.push(n)}})),e};return{listenerEvents:()=>{e.value.on("change",(e=>{const n=e.getValue();n!=r.value&&(r.value=n,t.emit("update:value",r.value),t.emit("input",r.value),t.emit("change",r.value,e))}));const n={};return o().filter((e=>!n[e]&&(n[e]=!0))).forEach((n=>{e.value.on(n,((...e)=>{t.emit(n,...e)}))}))}}}({cminstance:o,ctx:t,internalInstance:s,content:a});m((()=>e.options),(t=>{for(const n in e.options)o.value.setOption(n,t[n])}),{deep:!0}),m((()=>e.value),(e=>{(e=>{if(e!==o.value.getValue()){const t=o.value.getScrollInfo();o.value.setValue(e),a.value=e,o.value.scrollTo(t.left,t.top)}h()})(e)}));return m((()=>e.merge),(t=>{"fclog"!=e.options.mode&&"log"!=e.options.mode?e.merge?l.value="Merge":l.value="default":l.value="FcLog"}),{immediate:!0}),y((()=>{(()=>{const e=o.value.doc.cm.getWrapperElement();null==e||e.remove()})()})),{presetModeName:l,cmOptions:c,cminstance:o,content:a,ready:n=>{b(),h(),f(),t.emit("ready",o.value),m([()=>e.height,()=>e.width],(([e,t])=>{f(e,t)}),{deep:!0})},resize:f,containerWidth:d,containerHeight:g,instanceName:e.name||(null==(r=null==(n=null==s?void 0:s.parent)?void 0:n.type)?void 0:r.name)+"-cm",presetRef:p}}});G.render=function(e,r,o,a,l,c){return g(),f("div",{class:b(["codemirror-container",{merge:e.$props.merge,bordered:!e.$props.merge&&e.$props.border,"width-auto":!e.$props.width||"100%"==e.$props.width,"height-auto":!e.$props.height||"100%"==e.$props.height}]),style:w({height:e.containerHeight+"px"})},[(g(),x(O(e.presetModeName),k({style:{height:"100%"},ref:"presetRef",cminstance:e.cminstance,"onUpdate:cminstance":r[0]||(r[0]=t=>e.cminstance=t)},(s=i(i({},e.$props),e.$attrs),u={options:e.cmOptions,name:e.instanceName,content:e.content},t(s,n(u))),{onReady:e.ready}),null,16,["cminstance","onReady"]))],6);var s,u};G.install=(e,t)=>(t&&(t.options&&(G.props.globalOptions.default=()=>t.options),t.events&&(G.props.globalEvents.default=()=>t.events)),e.component("Codemirror",G),e);export{G as Codemirror,L as createLinkMark,P as createLog,V as createLogMark,H as createTitle,G as default,T as getLinkMark,D as getLocalTime,_ as getLogMark};
